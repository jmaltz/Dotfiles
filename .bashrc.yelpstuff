#Phing stuff
alias b="ssh -A dev6-devb"
export ANDROID_SDK=/Users/maltz/android-sdk
export ANDROID_HOME=/Users/maltz/android-sdk
export PATH=$PATH:/Users/maltz/Documents/workspace/android/api_mocks/scripts
export PATH=$PATH:~/Documents/workspace/android/tools
export PATH=$PATH:/Users/maltz/android-sdk/platform-tools
alias review-branch='postreview.py' 
alias shootie=~/bin/shootie.sh
alias e='cd ~/Documents/workspace/engdocs'
alias a='cd ~/Documents/workspace/android'
alias loc='echo "geo fix -122.40203 37.78628 
exit" | nc localhost 5554'
alias rmrf='rm -rf'
alias g="git"
function testClass(){
adb -e shell am instrument -w -e class $1 com.yelp.android.test/com.zutubi.android.junitreport.JUnitReportTestRunner
}
function testPackage(){
adb -e shell am instrument -w -e package $1 com.yelp.android.test/com.zutubi.android.junitreport.JUnitReportTestRunner
}
function r(){
	if [ ! $1 == "" ]
	then
		review-branch -r $1
	else
		review-branch --guess-summary --guess-description
	fi
}

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo " (${BRANCH}) "
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

export PS1="\[\e[1;34m\]\u\[\e[m\]@\[\e[1;32m\]\h\[\e[m\]:\[\e[1;33m\]\w\[\e[m\]\[\e[1;36m\]\`parse_git_branch\`\[\e[m\]\\$ "
